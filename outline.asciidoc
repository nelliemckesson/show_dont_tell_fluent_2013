== Outline

.CHRIS
* Intro to the Web Audio API
* About the book with Boris
* A little Atlas Reader demo

.NELLIE (4 min)
* It seems pretty obvious to publish something like this on the Web, right?
* Best way to really show the awesomeness of this technology.
* But the truth is, publisher's have it tough.
* Imagine if, instead of just building responsive sites for mobile, tablets, and desktop, you had to _also_ build content that responds to trees, dead browsers from 10 years ago, and secret government projects that you aren't even allowed to see the code for?
* This is the publishing landscape of today.
* Adding Web publishing into the mix is a total game changer.
TKTK
* EPUB is essentially HTML and CSS
* but most people have been thinking about ebooks as the same as print
* This means they use the same content
* And device support for full HTML functionality is a travesty
* But as Chris showed us, sometimes it's so much more powerful to see something in action
* And we need full flexibility of Web to show these things
* And in fact, we've published books to the Web before
* But they've all been custom projects, special snowflakes that existed outside of our normal pubishing workflow
* That's silly.
* The Web is where people read.
* Publishing and Web dev are the same - distributing information
* But we don't have the budget to build custom products for every format
* Most publishers already publish to a few different formats: EPUB, MOBI, PDF and Print
* But we're not getting 4x the sales
* In fact, we're pulling in less money than back in the print-only days, because we're selling the same number of books, but charging less for 75% of what we sell (ie, the ebooks)
* So we need our content to be responsive
* We need to be able to publish the same source file to every format that customers want to read on
* And we want that content to be the absolute best, prettiest, and most effective learning material for each of those formats
* Which means we need a publishing system that is flexible enough to handle just about any kind of interactive example an author can think of, and can target it's output for particular book formats
* So we built this system. 
* We built what is essentially a CMS that can publish responsively
* Authors write, pick what format to publish to, and their content gets styled accordingly
* For the Web, you get embedded video and audio and cool interactive stuff
* For print, you get links and placeholder images
* It's all about giving people the best learning experience for however they choose to read
* Print is still great: UX refined over hundreds of years
* But sometimes it's just better to see the technology in action, rather than read a description of it
TKTK
* By moving both reading and writing to the Web, we can do some really cool stuff
* First off, we can put the source files in GitHub.
* So as Chris and I are writing our book together, he can fork my repo, make changes, send me pull requests to update
* I can pull in his changes, rebuild with the click of a button, and presto, there it is.
* We also built our HTML commenting system to integrate with the authoring GUI, so authors can incorporate comments as they write, without jumping back and forth
* And in addition to audio and video embeds, we use JSBin and iframes so you can embed just about anything you want
* It's about scalability - a system that can work for almost any author, and build to almost any format.
* It's called Atlas, and we're really excited to explore this new way to spread the knowledge of innovators.